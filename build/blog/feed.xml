<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Codio Blog</title>
  <id>https://codio.com/s/blog</id>
  <link href="https://codio.com/s/blog"/>
  <link href="https://codio.com/s/blog/feed.xml" rel="self"/>
  <updated>2013-09-30T00:00:00Z</updated>
  <author>
    <name>Codio</name>
  </author>
  <entry>
    <title>Better Looking Annotations &amp;amp; Full Screen</title>
    <link rel="alternate" href="https://codio.com/s/blog/2013/09/better-looking-annotations-and-full-screen/"/>
    <id>https://codio.com/s/blog/2013/09/better-looking-annotations-and-full-screen/</id>
    <published>2013-09-30T00:00:00Z</published>
    <updated>2013-09-30T00:00:00Z</updated>
    <author>
      <name>Joel Moss</name>
    </author>
    <summary type="html">&lt;p&gt;Today we shipped some big improvements to the way you view and navigate through Annotations, and also added a handy way to open any tab in full screen.&lt;/p&gt;

&lt;h2 id="toc_0"&gt;Annotations&lt;/h2&gt;

&lt;p&gt;Annotations are a great way to create interactive, code-based tutorials and tours...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Today we shipped some big improvements to the way you view and navigate through Annotations, and also added a handy way to open any tab in full screen.&lt;/p&gt;

&lt;h2 id="toc_0"&gt;Annotations&lt;/h2&gt;

&lt;p&gt;Annotations are a great way to create interactive, code-based tutorials and tours. Just create a project and annotate your code using simple comments-based tags. Then viewers of your project will then be able to take a tour of your code, or click around on the annotations that you have created.&lt;/p&gt;

&lt;p&gt;Today&amp;#39;s release makes Annotations Tour content much less obtrusive. By moving the content out of a dialog window and into a tab - like everything else in Codio - you no longer have to move or resize the dialog out of the way. The code and Annotations content are now shown side-by-side.&lt;/p&gt;

&lt;p&gt;&lt;a href="/s/docs/annotations"&gt;Read the docs&lt;/a&gt; for more on Annotations and how to create and use them.&lt;/p&gt;

&lt;h2 id="toc_1"&gt;Full Screen&lt;/h2&gt;

&lt;p&gt;We&amp;#39;ve also sneaked in a nice new item to your &lt;code&gt;View&lt;/code&gt; menu. Just click &lt;code&gt;Full Screen&lt;/code&gt; and your current tab will be expanded into full screen. Or better still, just hit &lt;code&gt;F11&lt;/code&gt; on your keyboard for a quick shortcut. And if you don&amp;#39;t like &lt;code&gt;F11&lt;/code&gt;, open up your Preferences from the &lt;code&gt;Codio &amp;gt; Preferences &amp;gt; User&lt;/code&gt; menu item, and simply override the &lt;code&gt;fullscreen&lt;/code&gt; option. I set mine to &lt;code&gt;Cmd-Shift-F&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[ide]
fullscreen = Cmd-Shift-F
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="toc_2"&gt;And one more thing..&lt;/h2&gt;

&lt;p&gt;And we&amp;#39;ve improved the File Tree, by adding arrows to let you expand/collapse directories. Simple change, but it now lets you more easily see what is expanded and what isn&amp;#39;t.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>The Latest and Greatest - Why we only Support Modern Browsers</title>
    <link rel="alternate" href="https://codio.com/s/blog/2013/09/latest-and-greatest-why-we-only-support-modern-browsers/"/>
    <id>https://codio.com/s/blog/2013/09/latest-and-greatest-why-we-only-support-modern-browsers/</id>
    <published>2013-09-30T00:00:00Z</published>
    <updated>2013-09-30T00:00:00Z</updated>
    <author>
      <name>Joel Moss</name>
    </author>
    <summary type="html">&lt;p&gt;So we've been getting a few questions about our browser support recently, in particular why it is that we only support the most recent versions of the most popular browsers. So I thought I'd answer that question here.&lt;/p&gt;

&lt;p&gt;Basically, it all boils down...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;So we&amp;#39;ve been getting a few questions about our browser support recently, in particular why it is that we only support the most recent versions of the most popular browsers. So I thought I&amp;#39;d answer that question here.&lt;/p&gt;

&lt;p&gt;Basically, it all boils down to two things...&lt;/p&gt;

&lt;h2 id="toc_0"&gt;Maintainability&lt;/h2&gt;

&lt;p&gt;Codio is an extremely complex beast, built up of several individual applications and all needing to live together in perfect harmony. So needless to say, it takes a fair bit of work to maintain, and ensure that everything keeps working as it should.&lt;/p&gt;

&lt;p&gt;Also, as you will most likely know, building a web application is an entirely different experience than building server side applications. Most of the time, this experience is great, but the one big thing that sets web development apart is the endless struggle to make your app look and work great in dozens and dozens of browser and OS combinations.&lt;/p&gt;

&lt;p&gt;We have to test each browser on every popular operating system, and we have to do this continually. Of course, there are tools and services out there that can help us with this, but it is still very hard and extremely resource intensive. Because of our &amp;quot;Ship It&amp;quot; mantra, we need to move and react fast, and this includes browser testing.&lt;/p&gt;

&lt;h2 id="toc_1"&gt;Functionality&lt;/h2&gt;

&lt;p&gt;Codio is an environment designed and built to make your life easier. It includes some pretty unique features, as well as a lot of features that you all expect to see in the the best IDEs and text editors.&lt;/p&gt;

&lt;p&gt;Old browsers can severely restrict and constrain what we are able to build. For example, our support for multi-panel layouts wouldn&amp;#39;t be possible without the latest FlexBox features of CSS3.&lt;/p&gt;

&lt;p&gt;We simply wouldn&amp;#39;t be able to deliver the best features and the best user experience to you, if we still had to support old browsers. We would only be shipping new features, improvements and bug fixes every couple of weeks, instead of every day, like we do currently.&lt;/p&gt;

&lt;p&gt;We believe that you deserve the latest and greatest, so we only support the latest and greatest browsers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chrome 21 or later&lt;/li&gt;
&lt;li&gt;Firefox 22 or later&lt;/li&gt;
&lt;li&gt;IE 10 or later&lt;/li&gt;
&lt;li&gt;Safari 6 or later&lt;/li&gt;
&lt;li&gt;Opera 12 or later&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Improving Performance - Tab Switching</title>
    <link rel="alternate" href="https://codio.com/s/blog/2013/09/improving-performance-tab-switching/"/>
    <id>https://codio.com/s/blog/2013/09/improving-performance-tab-switching/</id>
    <published>2013-09-27T00:00:00Z</published>
    <updated>2013-09-27T00:00:00Z</updated>
    <author>
      <name>Friedel Ziegelmayer</name>
    </author>
    <summary type="html">&lt;p&gt;As you might know we have switched our editor from &lt;a href="http://ace.c9.io"&gt;Ace&lt;/a&gt; to &lt;a href="http://codemirror.net"&gt;CodeMirror&lt;/a&gt;. The optimisations that we already had in place are now obsolete. So I've started looking at optimising the way we use &lt;a href="http://codemirror.net"&gt;CodeMirror&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="toc_0"&gt;Where to optimise?&lt;/h2&gt;

&lt;p&gt;I started my adventure by importing...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;As you might know we have switched our editor from &lt;a href="http://ace.c9.io"&gt;Ace&lt;/a&gt; to &lt;a href="http://codemirror.net"&gt;CodeMirror&lt;/a&gt;. The optimisations that we already had in place are now obsolete. So I&amp;#39;ve started looking at optimising the way we use &lt;a href="http://codemirror.net"&gt;CodeMirror&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="toc_0"&gt;Where to optimise?&lt;/h2&gt;

&lt;p&gt;I started my adventure by importing the complete &lt;a href="http://nodejs.org"&gt;Node.js&lt;/a&gt; repository into Codio and simply opening, reading and editing different files. I immediately noticed that when I opened multiple large files and switched between those, it would take a fair bit of time. So there I had found my first place to optimise... tab switching.&lt;/p&gt;

&lt;h2 id="toc_1"&gt;Measure it&lt;/h2&gt;

&lt;p&gt;I opened up the dev tools and started profiling.&lt;/p&gt;

&lt;p&gt;&lt;img src="/s/img/blog/flames-javascript-cpu-profile-running-e0c5401e.png" /&gt;&lt;/p&gt;

&lt;p&gt;And when I looked at the time it took for switching tabs, I saw that it took a total time of about two seconds to simply switch between two tabs.&lt;/p&gt;

&lt;p&gt;&lt;img src="/s/img/blog/flames-graph-before-0b9cfa42.png" /&gt;&lt;/p&gt;

&lt;p&gt;The image above shows the flame chart I recorded for switching. The two seconds can be seen if you look at the vertical axis, while the horizontal axis shows the call stack at a given moment. For more information on flame charts see this &lt;a href="http://www.html5rocks.com/en/tutorials/developertools/revolutions2013/#toc-flame-chart"&gt;article&lt;/a&gt; on &lt;a href="http://www.html5rocks.com"&gt;html5rocks&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="toc_2"&gt;Find the biggest time thief&lt;/h2&gt;

&lt;p&gt;Looking at these call stacks I found that the most time-consuming method was &lt;code&gt;CodeMirror.refresh()&lt;/code&gt;, which repaints the whole display area of the instance to update all information. But what was more concerning was that a single call was taking so long. I realised that this method was called not only once, but three times.&lt;/p&gt;

&lt;h2 id="toc_3"&gt;Optimizations: 1st Round&lt;/h2&gt;

&lt;p&gt;With my new knowledge I went into the code tracing the stack calls and then eliminating two of the three calls to &lt;code&gt;CodeMirror.refresh&lt;/code&gt; when switching from one tab to another. My work did not go unrewarded, I ended up with this new graph resulting in an overall switch time of about 450ms...&lt;/p&gt;

&lt;p&gt;&lt;img src="/s/img/blog/flames-graph-middle-8374019e.png" /&gt;&lt;/p&gt;

&lt;h2 id="toc_4"&gt;Optimizations: 2nd Round&lt;/h2&gt;

&lt;p&gt;My newly gained speed made me happy, but after looking again into the graph I could still see two call stack spikes which took about the same amount of time, and both ended up re-rendering the CodeMirror instance. So looking a little closely, I could see that the first time was caused by &lt;code&gt;CodeMirror.swapDoc&lt;/code&gt; and the second by &lt;code&gt;CodeMirror.refresh&lt;/code&gt;. When you look at the source code for these two &lt;a href="https://github.com/marijnh/CodeMirror/blob/master/lib/codemirror.js#L3207"&gt;here&lt;/a&gt; and &lt;a href="https://github.com/marijnh/CodeMirror/blob/master/lib/codemirror.js#L3199"&gt;here&lt;/a&gt;, you can see that they both end up calling the same methods, which results in a complete repaint of CodeMirror.&lt;/p&gt;

&lt;p&gt;To understand what was happening, I need to explain what happens when you switch a tab. For performance reasons we only keep one CodeMirror instance around and if you switch from one tab to another we call &lt;code&gt;swapDoc&lt;/code&gt; to change the document that is being displayed. To accommodate for size changes and highlighting changes, we call &lt;code&gt;refresh&lt;/code&gt; at the end of the switching process. But with my knowledge that &lt;code&gt;swapDoc&lt;/code&gt; already does everything we need to do, I just moved &lt;code&gt;swapDoc&lt;/code&gt; to the end of the process, (of course there were some other problems that this entailed but it was not too bad) and voila, only one repaint of CodeMirror when switching tabs. Which now gave a switch time of just 167ms.&lt;/p&gt;

&lt;p&gt;&lt;img src="/s/img/blog/flames-graph-after-085d5d4c.png" /&gt;&lt;/p&gt;

&lt;h2 id="toc_5"&gt;Roundup&lt;/h2&gt;

&lt;p&gt;As you&amp;#39;ve seen, profiling, measuring and looking at these great data points that the dev tools provide, gives you an easy way to find and track down performance problems. And when you look at this data, it&amp;#39;s immediately clear that it really pays off!&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Before&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;1st Round&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;2nd Round&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Total Time&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;2055ms&lt;/td&gt;
&lt;td&gt;450ms&lt;/td&gt;
&lt;td&gt;167ms&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</content>
  </entry>
  <entry>
    <title>Support for Parse.com</title>
    <link rel="alternate" href="https://codio.com/s/blog/2013/09/parse-integration/"/>
    <id>https://codio.com/s/blog/2013/09/parse-integration/</id>
    <published>2013-09-26T00:00:00Z</published>
    <updated>2013-09-26T00:00:00Z</updated>
    <author>
      <name>Freddy May</name>
    </author>
    <summary type="html">&lt;p&gt;Codio is delighted to announce support for &lt;a href="http://parse.com"&gt;Parse.com&lt;/a&gt;. Developers can now write code in the world's best Web IDE and deploy it directly to Parse.com.&lt;/p&gt;

&lt;p&gt;Javascript/Cloud Code  developers will find that they can code and deploy a Parse app incredibly quickly...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Codio is delighted to announce support for &lt;a href="http://parse.com"&gt;Parse.com&lt;/a&gt;. Developers can now write code in the world&amp;#39;s best Web IDE and deploy it directly to Parse.com.&lt;/p&gt;

&lt;p&gt;Javascript/Cloud Code  developers will find that they can code and deploy a Parse app incredibly quickly with nothing but a browser.&lt;/p&gt;

&lt;h2 id="toc_0"&gt;Video&lt;/h2&gt;

&lt;p&gt;&lt;a href="//player.vimeo.com/video/75482235?autoplay=1&amp;hd=1" target="_blank"&gt;Click here&lt;/a&gt; to see a very short video of how incredibly easy it is to build and deploy Cloud Code Apps from Codio.&lt;/p&gt;

&lt;h2 id="toc_1"&gt;Application Structure&lt;/h2&gt;

&lt;p&gt;The application structure in Codio is the same as if you were coding on your local machine. You will also see the global.json file, which is where your application and master keys are specified.&lt;/p&gt;

&lt;p&gt;&lt;img alt="parse structure" src="/s/img/blog/parse-structure-6142066f.png" /&gt;&lt;/p&gt;

&lt;h2 id="toc_2"&gt;Parse.com Deployment Profile&lt;/h2&gt;

&lt;p&gt;We&amp;#39;ve added a Parse deployment profile into Codio. This lets Codio take care of the entire deployment process onto Parse.com. Watch the video above to see this in action. Deployment is extremely fast as it&amp;#39;s a Cloud-&gt;Cloud operation, with only diffs being transferred.&lt;/p&gt;

&lt;p&gt;&lt;img alt="parse structure" src="/s/img/blog/parse-deploy-121d1c0f.png" /&gt;&lt;/p&gt;

&lt;h2 id="toc_3"&gt;Example Apps&lt;/h2&gt;

&lt;p&gt;Below are two sample Apps, both of which are standard Parse.com tutorials. You can load them directly into the Codio IDE. Feel free to fork them in Codio (Project-&gt;Fork). You can then follow the instructions in the README.md files.&lt;/p&gt;

&lt;h3 id="toc_4"&gt;To Do App&lt;/h3&gt;

&lt;p&gt;Click the button below to load this front-end App into Codio.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/192Whma" target="_blank"&gt;&lt;img src=" https://codio-public.s3.amazonaws.com/sharing/show-me-the-code.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="toc_5"&gt;AnyImg App&lt;/h3&gt;

&lt;p&gt;Click the button below to load this Cloud Code back-end app into Codio.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/1eJAHv2)" target="_blank"&gt;&lt;img src=" https://codio-public.s3.amazonaws.com/sharing/show-me-the-code.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can &lt;a href="/s/docs/deployment/"&gt;read more about deployment&lt;/a&gt; in our documentation.&lt;/p&gt;

&lt;h2 id="toc_6"&gt;Creating a Parse.com App&lt;/h2&gt;

&lt;p&gt;We have set up a Parse.com template. When you go to create a new project from the Codio Dashboard, select &amp;quot;From a template&amp;quot; from the Create Project option dropdown. You&amp;#39;ll find a &amp;quot;Parse Anyimg&amp;quot; template waiting for you.&lt;/p&gt;

&lt;p&gt;Open the README.md file and follow the instructions to get it running in 5 minutes.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>From the Front-line - #32</title>
    <link rel="alternate" href="https://codio.com/s/blog/2013/09/from-the-frontline-32/"/>
    <id>https://codio.com/s/blog/2013/09/from-the-frontline-32/</id>
    <published>2013-09-25T00:00:00Z</published>
    <updated>2013-09-25T00:00:00Z</updated>
    <author>
      <name>Joel Moss</name>
    </author>
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hubspot have released another open source lib called &lt;a href="http://github.hubspot.com/pace/docs/welcome/"&gt;Pace&lt;/a&gt;, but this time for creating good looking progress indicators for page load and ajax navigation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://stedolan.github.io/jq/"&gt;jq&lt;/a&gt; is a lightweight and flexible command-line JSON processor. Slice, filter, map and transform...&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hubspot have released another open source lib called &lt;a href="http://github.hubspot.com/pace/docs/welcome/"&gt;Pace&lt;/a&gt;, but this time for creating good looking progress indicators for page load and ajax navigation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://stedolan.github.io/jq/"&gt;jq&lt;/a&gt; is a lightweight and flexible command-line JSON processor. Slice, filter, map and transform JSON!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now this is cool! &lt;a href="http://www.kennethcachia.com/background-check/"&gt;BackgroundCheck&lt;/a&gt; is a JS lib for automatically switching the colour of an element, depending upon the brightness of images behind it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;More awesome effects... &lt;a href="https://github.com/maroslaw/rainyday.js"&gt;Rainyday&lt;/a&gt; simulates &lt;a href="http://maroslaw.github.io/rainyday.js/demo1.html"&gt;raindrops on a window&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Flexbox is coming! In fact it&amp;#39;s already arrived, and is slower gaining wider browser support. &lt;a href="http://philipwalton.github.io/solved-by-flexbox/"&gt;Solved by Flexbox&lt;/a&gt; is a site that demo&amp;#39;s what you can do with CSS Flexbox.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Thanks in no small part to CoffeeScript, &lt;a href="http://robcee.net/2013/fat-arrow-functions-in-javascript/"&gt;Fat Arrow functions&lt;/a&gt; are about to make their way in Javascript.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Multiple Panels, New Editor, Git, Custom keybindings &amp;amp; Preferences</title>
    <link rel="alternate" href="https://codio.com/s/blog/2013/09/multiple-panels-new-editor-git-custom-keybindings-preferences/"/>
    <id>https://codio.com/s/blog/2013/09/multiple-panels-new-editor-git-custom-keybindings-preferences/</id>
    <published>2013-09-23T00:00:00Z</published>
    <updated>2013-09-23T00:00:00Z</updated>
    <author>
      <name>Joel Moss</name>
    </author>
    <summary type="html">&lt;p&gt;Last week was the culmination of several months of hard graft by the entire Codio team, and is the start of the next phase of our path to global domination! We released a plethora of new and improved features that we think are exciting and - in some...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Last week was the culmination of several months of hard graft by the entire Codio team, and is the start of the next phase of our path to global domination! We released a plethora of new and improved features that we think are exciting and - in some cases - ground-breaking.&lt;/p&gt;

&lt;p&gt;&lt;a href="/s//player.vimeo.com/video/74220594?autoplay=1&amp;amp;hd=1"&gt;Watch the all new intro video&lt;/a&gt;, and then allow me to summarise all that is new and shiny...&lt;/p&gt;

&lt;h2 id="toc_0"&gt;Multi-Panel Layouts&lt;/h2&gt;

&lt;p&gt;Codio is now the &lt;em&gt;only&lt;/em&gt; browser based IDE to boast full support for &lt;a href="/#panels"&gt;multi-panel layouts&lt;/a&gt;. You can customise the layout of Codio into almost any arrangement of panels and tabs, in both a vertical and horizontal manner. Edit a file in one panel, while previewing it in another panel right alongside it; or use one of the predefined layouts as a great way to demo your code.&lt;/p&gt;

&lt;p&gt;The introduction of multiple panels, also brings with it a new change to the way you access almost anything in Codio. Everything is opened within a tab! This makes the UI much more unobtrusive, and takes multi-tasking to a whole new level - Bower in one tab, code in one, Deployment in the other, etc. etc.&lt;/p&gt;

&lt;h2 id="toc_1"&gt;All New Editor&lt;/h2&gt;

&lt;p&gt;Codio was originally based on the popular &lt;a href="http://ace.c9.io/"&gt;ACE Code Editor&lt;/a&gt;, and it served us fairly well, But it soon became apparent that it was lacking in a few areas. &lt;a href="http://codemirror.net/"&gt;CodeMirror&lt;/a&gt; is the new kid on the block, but has quickly gained momentum. It&amp;#39;s code is clean and documented, and has great performance. So we made the highly debated decision to replace ACE with CodeMirror.&lt;/p&gt;

&lt;p&gt;Watch this space for some awesome new features and improvements based around the new Editor.&lt;/p&gt;

&lt;h2 id="toc_2"&gt;Git Support&lt;/h2&gt;

&lt;p&gt;This is been a long time coming... &lt;a href="/#sourcecontrol"&gt;Codio now supports Git&lt;/a&gt;. This means you can clone, commit, push, pull, branch, merge and a whole load more, right within Codio, and without ever leaving the IDE. We created a simple command line interface (CLI) that is opened in a new tab, and accepts the most common Git commands. So everything you do in Codio now sits on top of Git. Of course, you don&amp;#39;t have to use Git at all, but if you do, just commit away to your hearts content.&lt;/p&gt;

&lt;h2 id="toc_3"&gt;Custom Keybindings&lt;/h2&gt;

&lt;p&gt;This release signals the beginning of our efforts to make Codio the most customisable and extendible browser-based IDE around. We know how much developers like their keyboard shortcuts, because they can improve and speed coding and development hugely. We&amp;#39;ve introduced a load of new keyboard shortcuts to Codio. But not only that, we&amp;#39;ve also made almost every one of them customisable.&lt;/p&gt;

&lt;p&gt;This is available as part of the new preferences system (mentioned below), and is extremely simple to use. Just redefine any keybinding with the keyboard combination of your choice.&lt;/p&gt;

&lt;h2 id="toc_4"&gt;New Preferences System&lt;/h2&gt;

&lt;p&gt;We&amp;#39;ve completely rebuilt the way you customise Codio. Almost everything that you can customise is now done via an INI based text file, which you can access via your dashboard and IDE. We show you our defaults, and allow you to simply redefine any of these with the value of your choice. It even applies your changes as you type.&lt;/p&gt;

&lt;h2 id="toc_5"&gt;Sharing Your Code&lt;/h2&gt;

&lt;p&gt;And finally, we added a new menu item to allow you to quickly and easily &lt;a href="/s/share-your-code"&gt;share your projects and code with the world&lt;/a&gt;. Accessed from &lt;code&gt;Project &amp;gt; Share...&lt;/code&gt; menu item, it will give you a few images you can use to place on your site or Github README, which will link back to your Codio project.&lt;/p&gt;

&lt;p&gt;We also provide a URL that contains the precise panel and tab layout of your project. This is a great way to share your project exactly as you see it, as it will maintain your current layout, and even the files you have open.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;We&amp;#39;ll be blogging in more detail over the next few weeks about each of the above, so watch this space and follow us &lt;a href="https://twitter.com/CodioHQ"&gt;@CodioHQ&lt;/a&gt;. In the meantime, head on over to the updated &lt;a href="/"&gt;homepage&lt;/a&gt; and &lt;a href="/s/docs"&gt;docs&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
</feed>
