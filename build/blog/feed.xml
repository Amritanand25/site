<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Codio Blog</title>
  <id>https://codio.com/s/blog</id>
  <link href="https://codio.com/s/blog"/>
  <link href="https://codio.com/s/blog/feed.xml" rel="self"/>
  <updated>2013-08-08T00:00:00Z</updated>
  <author>
    <name>Codio</name>
  </author>
  <entry>
    <title>From the Front-line - #19</title>
    <link rel="alternate" href="https://codio.com/s/blog/2013/08/from-the-frontline-19/"/>
    <id>https://codio.com/s/blog/2013/08/from-the-frontline-19/</id>
    <published>2013-08-08T00:00:00Z</published>
    <updated>2013-08-08T00:00:00Z</updated>
    <author>
      <name>Joel Moss</name>
    </author>
    <summary type="html">&lt;p&gt;Kinda' running out of ways to introduce posts...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;More awesomeness from the guys at Square. &lt;a href="http://szimek.github.io/signature_pad/"&gt;Signature Pad&lt;/a&gt; is a Javascript library that very elegantly allows a user to sign their name, and then saves it as a PNG.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://html5hub.com/"&gt;HTML5 Hub&lt;/a&gt; is a new effort created in...&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    <content type="html">&lt;p&gt;Kinda&amp;#39; running out of ways to introduce posts...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;More awesomeness from the guys at Square. &lt;a href="http://szimek.github.io/signature_pad/"&gt;Signature Pad&lt;/a&gt; is a Javascript library that very elegantly allows a user to sign their name, and then saves it as a PNG.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://html5hub.com/"&gt;HTML5 Hub&lt;/a&gt; is a new effort created in partnership with Intel to create a community around HTML5. Hold on though, hasn&amp;#39;t this been tried before?Right now, all it seems to be is a blog. Some good articles though.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://hpneo.github.io/gmaps/"&gt;gmaps.js&lt;/a&gt; is a nice and simple Google Maps Javascript library.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Time to start using Web Workers in your apps. Check out &lt;a href="http://architectjs.org/"&gt;Architect&lt;/a&gt;, which is a Javascript library built on top of Web Workers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you use CoffeeScript, along with reactive programming and declaritive UI&amp;#39;s, then you&amp;#39;ll love &lt;a href="http://yz.mit.edu/wp/introducing-reactive-coffee/"&gt;Reactive.coffee&lt;/a&gt; by &lt;a href="https://twitter.com/yaaang"&gt;@yaaang&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Heard about Data-Bindings in Javascript and HTML? Check out &lt;a href="http://www.ractivejs.org/"&gt;Ractive.js&lt;/a&gt; which uses a similar concept, but based around Handlebars templates.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to &lt;a href="http://yslow.org/phantomjs/"&gt;measure performance using YSlow and PhantomJS&lt;/a&gt;. Even has CI support.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My goal is to try to publish every week day, so I would appreciate any help. If you find anything that you think would deserve a place in future issues, please &lt;a href="mailto:jmoss@codio.com"&gt;let me know&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>The Problem with Promises</title>
    <link rel="alternate" href="https://codio.com/s/blog/2013/08/the-problem-with-promises/"/>
    <id>https://codio.com/s/blog/2013/08/the-problem-with-promises/</id>
    <published>2013-08-06T00:00:00Z</published>
    <updated>2013-08-06T00:00:00Z</updated>
    <author>
      <name>Joel Moss</name>
    </author>
    <summary type="html">&lt;p&gt;We use &lt;a href="http://promisesaplus.com/"&gt;Promises&lt;/a&gt; as much as possible in our Javascript code, because they save us from callback hell, and produce much more readable and organised code. Simply put, a Promise represents a value that may or may not yet be available.&lt;/p&gt;

&lt;p&gt;We use &lt;a href="http://api.jquery.com/category/deferred-object/"&gt;jQuery's...&lt;/a&gt;&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;We use &lt;a href="http://promisesaplus.com/"&gt;Promises&lt;/a&gt; as much as possible in our Javascript code, because they save us from callback hell, and produce much more readable and organised code. Simply put, a Promise represents a value that may or may not yet be available.&lt;/p&gt;

&lt;p&gt;We use &lt;a href="http://api.jquery.com/category/deferred-object/"&gt;jQuery&amp;#39;s Deferred object&lt;/a&gt; when working with Promises, which is a slightly loose implementation of the &lt;a href="http://promisesaplus.com/"&gt;Promises/A+ spec&lt;/a&gt;. It might not be the &lt;a href="http://domenic.me/2012/10/14/youre-missing-the-point-of-promises/"&gt;&amp;quot;correct&amp;quot;&lt;/a&gt; way, but it works as expected.&lt;/p&gt;

&lt;p&gt;We&amp;#39;re doing a little refactoring of the core IDE and decided that the &lt;a href="https://github.com/tildeio/rsvp.js"&gt;RSVP&lt;/a&gt; Promises library was a more &amp;quot;correct&amp;quot; implementation, and so we started using that in the refactor branch. However, it turns out that RSVP and other Promise libraries that adhere to the spec include a nasty little gotcha that we feel is completely unacceptable when building production applications.&lt;/p&gt;

&lt;p&gt;It all boils down to point &lt;a href="http://promisesaplus.com/#point-50"&gt;3.2.6.2&lt;/a&gt; of the spec:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If either onFulfilled or onRejected throws an exception, &lt;code&gt;promise2&lt;/code&gt; must be rejected with the thrown exception as the reason.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Usually, when an exception is raised in Javascript, it is reported immediately by the browser as an error, which makes it very easy to act upon and see exactly when and where any issues arise. You can then use an &lt;a href="http://errorception.com"&gt;exception tracking service&lt;/a&gt; to report on errors as and when they happen, and respond accordingly.&lt;/p&gt;

&lt;p&gt;The Promises/A+ spec states that when an exception is raised anywhere within your Promised code, the promise will be rejected. This includes &lt;em&gt;ANY and ALL exceptions&lt;/em&gt;, which means the promise will swallow your exceptions - all the time, every time!&lt;/p&gt;

&lt;p&gt;The nature of an exception is such that you do not and cannot know every time, when and where they will happen. Yes, you can - and should - catch common errors and handle them accordingly. But any unexpected errors are much harder to catch. So if your Promises swallow every one of these errors, you now have to write code to handle them. It now becomes almost like using &lt;code&gt;try/catch&lt;/code&gt; all over the place, and if you find yourself doing that, then you&amp;#39;re doing it wrong!&lt;/p&gt;

&lt;h2 id="toc_0"&gt;The Options&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/tildeio/rsvp.js"&gt;RSVP&lt;/a&gt; makes things worse&lt;/strong&gt;, because if you don&amp;#39;t catch your Promise rejections, then any exceptions will be completely ignored. You will never know if an error occurred, and when or where it happened.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="http://documentup.com/kriskowal/q/"&gt;Q&lt;/a&gt; handles this a little better&lt;/strong&gt; by not swallowing exceptions when you don&amp;#39;t catch its rejections. But that means you now have to ensure that you catch rejections in &lt;em&gt;every&lt;/em&gt; Promise, and handle them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="http://jquery.com/"&gt;jQuery&lt;/a&gt; is even better still&lt;/strong&gt;, because it does not swallow our exceptions.&lt;/p&gt;

&lt;h2 id="toc_1"&gt;In Conclusion&lt;/h2&gt;

&lt;p&gt;So we ended up back with jQuery which lets &lt;strong&gt;us&lt;/strong&gt; decide how to handle exceptions. Any exception in a Promise is handled exactly as you would expect, and raises it immediately. It does not swallow it up, leaving you to wander why the hell your code is not working.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>From the Front-line - #18</title>
    <link rel="alternate" href="https://codio.com/s/blog/2013/08/from-the-frontline-18/"/>
    <id>https://codio.com/s/blog/2013/08/from-the-frontline-18/</id>
    <published>2013-08-06T00:00:00Z</published>
    <updated>2013-08-06T00:00:00Z</updated>
    <author>
      <name>Joel Moss</name>
    </author>
    <summary type="html">&lt;p&gt;Welcome to #18...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Dependency injection in Javascript? &lt;a href="https://github.com/jcreamer898/bindr"&gt;Yes you can!&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you use SCSS, then this &lt;a href="https://gist.github.com/jareware/4738651"&gt;Gist covering advanced SCSS&lt;/a&gt; by &lt;a href="https://github.com/jareware"&gt;@jareware&lt;/a&gt; is a must read.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lovely collection of some really quite useful &lt;a href="https://github.com/assemble/handlebars-helpers"&gt;Handlebars helpers&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Not sure how useful this is for...&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    <content type="html">&lt;p&gt;Welcome to #18...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Dependency injection in Javascript? &lt;a href="https://github.com/jcreamer898/bindr"&gt;Yes you can!&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you use SCSS, then this &lt;a href="https://gist.github.com/jareware/4738651"&gt;Gist covering advanced SCSS&lt;/a&gt; by &lt;a href="https://github.com/jareware"&gt;@jareware&lt;/a&gt; is a must read.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lovely collection of some really quite useful &lt;a href="https://github.com/assemble/handlebars-helpers"&gt;Handlebars helpers&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Not sure how useful this is for real world code, but it&amp;#39;s cool nonetheless. &lt;a href="https://github.com/mariusGundersen/Overload"&gt;Overload&lt;/a&gt; is a simple way to overload a function depending on the type of the parameters passed to it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://timseverien.nl/promin/"&gt;Promin&lt;/a&gt; is a jQuery plugin that allows you to break your form inputs into smaller chunks, while providing a way to navigate through the inputs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A somewhat shocking post by &lt;a href="https://twitter.com/elliottkember"&gt;Elliott Kember&lt;/a&gt; on &lt;a href="http://blog.elliottkember.com/chromes-insane-password-security-strategy"&gt;Chrome&amp;#39;s insane password security strategy&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Beautiful collection of &lt;a href="http://tympanus.net/Development/CreativeLinkEffects/"&gt;creative link effects&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My goal is to try to publish every week day, so I would appreciate any help. If you find anything that you think would deserve a place in future issues, please &lt;a href="mailto:jmoss@codio.com"&gt;let me know&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>From the Front-line - #17</title>
    <link rel="alternate" href="https://codio.com/s/blog/2013/08/from-the-frontline-17/"/>
    <id>https://codio.com/s/blog/2013/08/from-the-frontline-17/</id>
    <published>2013-08-05T00:00:00Z</published>
    <updated>2013-08-05T00:00:00Z</updated>
    <author>
      <name>Joel Moss</name>
    </author>
    <summary type="html">&lt;p&gt;First issue of the month, and it's chocka...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Use Less and live on the edge? Check out &lt;a href="https://github.com/codio/Flex.less"&gt;Flex.less&lt;/a&gt;, which is a collection of Less mixins for working with CSS3 Flexbox.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://rocket.github.io/"&gt;Rocket&lt;/a&gt; is a very interesting concept for real time apps, using Server Sent Events...&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    <content type="html">&lt;p&gt;First issue of the month, and it&amp;#39;s chocka...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Use Less and live on the edge? Check out &lt;a href="https://github.com/codio/Flex.less"&gt;Flex.less&lt;/a&gt;, which is a collection of Less mixins for working with CSS3 Flexbox.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://rocket.github.io/"&gt;Rocket&lt;/a&gt; is a very interesting concept for real time apps, using Server Sent Events (SSE) and JSON PATCH. I&amp;#39;m watching this one closely.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://kenkeiter.com/2013/07/21/redesigning-credit-card-inputs/"&gt;Skeuocard&lt;/a&gt; is a genius UI concept for making the input of credit card details a familiar process for the user. &lt;a href="http://kenkeiter.com/skeuocard/"&gt;Try it out here&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://mean.io/"&gt;MEAN&lt;/a&gt; is a boilerplate that provides a nice starting point for MongoDB, Node.js, Express, and AngularJS based applications.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The popular Javascript test framework; &lt;a href="http://pivotal.github.io/jasmine/"&gt;Jasmine&lt;/a&gt; is almost ready for a production release of 2.0.0. Check out the &lt;a href="https://github.com/pivotal/jasmine/releases/tag/v2.0.0.rc2"&gt;rc2 release&lt;/a&gt; and the &lt;a href="https://github.com/pivotal/jasmine/blob/v2.0.0.rc2/release_notes/20rc1.md"&gt;release notes&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There are a couple of gems to find this article about &lt;a href="http://tech.pro/tutorial/1453/7-javascript-basics-many-developers-aren-t-using-properly"&gt;7 JavaScript basics many developers aren&amp;#39;t using (properly)&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Like Github&amp;#39;s user heatmaps? Then check out &lt;a href="http://kamisama.github.io/cal-heatmap/"&gt;Cal-Heatmap&lt;/a&gt;, which is an open source Javascript lib for creating these heatmaps in your apps.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The brilliant &lt;a href="http://jshint.com"&gt;JSHint&lt;/a&gt; now allows you to put your &lt;a href="http://jshint.com/blog/2013-08-02/npm/"&gt;JSHint config into your package.json&lt;/a&gt; instead of the usual &lt;code&gt;.jshintrc&lt;/code&gt; file. Nice!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Want automatic notifications when your Grunt tasks fail? &lt;a href="https://github.com/dylang/grunt-notify"&gt;You got it!&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My goal is to try to publish every week day, so I would appreciate any help. If you find anything that you think would deserve a place in future issues, please &lt;a href="mailto:jmoss@codio.com"&gt;let me know&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>All New Site</title>
    <link rel="alternate" href="https://codio.com/s/blog/2013/08/all-new-site/"/>
    <id>https://codio.com/s/blog/2013/08/all-new-site/</id>
    <published>2013-08-01T00:00:00Z</published>
    <updated>2013-08-01T00:00:00Z</updated>
    <author>
      <name>Joel Moss</name>
    </author>
    <summary type="html">&lt;p&gt;Today, we are very excited to announce an all singing, all dancing, brand spanking new website and logo!&lt;/p&gt;

&lt;p&gt;Of course, if you are already looking at it, you can already see how amazing it is. But you should check out the &lt;a href="https://codio.com"&gt;homepage&lt;/a&gt;, which has changed dramatically...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Today, we are very excited to announce an all singing, all dancing, brand spanking new website and logo!&lt;/p&gt;

&lt;p&gt;Of course, if you are already looking at it, you can already see how amazing it is. But you should check out the &lt;a href="https://codio.com"&gt;homepage&lt;/a&gt;, which has changed dramatically. It&amp;#39;s message is much more focused and now represents exactly what Codio is all about... a browser based IDE focused on front-end web development; HTML, Javascript and CSS.&lt;/p&gt;

&lt;p&gt;We also have a new logo and associated icon which you&amp;#39;ll start to see popping up here, there and everywhere.&lt;/p&gt;

&lt;p&gt;And if you are perhaps reading this elsewhere, head on over to &lt;a href="https://codio.com"&gt;codio.com&lt;/a&gt; to see it in all its glory!&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>From the Front-line - #16</title>
    <link rel="alternate" href="https://codio.com/s/blog/2013/07/from-the-frontline-16/"/>
    <id>https://codio.com/s/blog/2013/07/from-the-frontline-16/</id>
    <published>2013-07-31T00:00:00Z</published>
    <updated>2013-07-31T00:00:00Z</updated>
    <author>
      <name>Joel Moss</name>
    </author>
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;An &lt;a href="http://tech.pro/tutorial/1456/a-primer-into-front-end-tooling-gruntjs-for-an-open-source-workflow"&gt;in-depth primer&lt;/a&gt; into front-end tooling using Grunt, for an open source workflow.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/layervault/psd.rb"&gt;PSD.rb&lt;/a&gt; is a Ruby library that can parse Photoshop PSD files. The library itself isn't front-end related, but what it does is.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/facebook/huxley"&gt;Huxley&lt;/a&gt; is a test-like system for catching...&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;An &lt;a href="http://tech.pro/tutorial/1456/a-primer-into-front-end-tooling-gruntjs-for-an-open-source-workflow"&gt;in-depth primer&lt;/a&gt; into front-end tooling using Grunt, for an open source workflow.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/layervault/psd.rb"&gt;PSD.rb&lt;/a&gt; is a Ruby library that can parse Photoshop PSD files. The library itself isn&amp;#39;t front-end related, but what it does is.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/facebook/huxley"&gt;Huxley&lt;/a&gt; is a test-like system for catching UI regressions. It watches your browse, takes screenshots, and then tells you when they change. Great idea!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Jordan Lewis has written a &lt;a href="http://webuild.envato.com/blog/techniques-for-mobile-and-responsive-cross-browser-testing/"&gt;post&lt;/a&gt; about a bunch of techniques for mobile and responsive cross-browser testing at Envato.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How did I not know about this one? &lt;a href="http://vanamco.com/ghostlab/"&gt;Ghostlab&lt;/a&gt; is a Mac app that provides synchronized testing for web and mobile. Open your app on a couple of devices, then watch each one mimic your actions in the other. Pretty damn cool!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://hipsterlogo.com/"&gt;6 simple steps to create a hipster logo&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Another great little blog &lt;a href="http://blog.alexmaccaw.com/jswebapps-onbeforeunload"&gt;post&lt;/a&gt; from Alex MacCaw about preventing tab-close data loss.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My goal is to publish every week day, so I would appreciate any help. If you find anything that you think would deserve a place in future issues, please &lt;a href="mailto:jmoss@codio.com"&gt;let me know&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
</feed>
