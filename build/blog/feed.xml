<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Code and Unload by Codio</title>
  <subtitle>While we code we often have lots of ideas brewing around. Ideas we'd like to unload onto you</subtitle>
  <id>https://codio.com/s/blog</id>
  <link href="https://codio.com/s/blog"/>
  <link href="https://codio.com/s/blog/feed.xml" rel="self"/>
  <updated>2013-07-02T00:00:00Z</updated>
  <author>
    <name>Codio</name>
  </author>
  <entry>
    <title>Removing Apps</title>
    <link rel="alternate" href="https://codio.com/s/blog/2013/07/removing-apps/"/>
    <id>https://codio.com/s/blog/2013/07/removing-apps/</id>
    <published>2013-07-02T00:00:00Z</published>
    <updated>2013-07-02T00:00:00Z</updated>
    <author>
      <name>Joel Moss</name>
    </author>
    <summary type="html">&lt;p&gt;Codio is based upon projects, with a project having any number of files and directories. Codio also has a concept of app's within a project, and that is what you see when creating a new project.&lt;/p&gt;

&lt;p&gt;But for a long time now, app's have become somewhat...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Codio is based upon projects, with a project having any number of files and directories. Codio also has a concept of app&amp;#39;s within a project, and that is what you see when creating a new project.&lt;/p&gt;

&lt;p&gt;But for a long time now, app&amp;#39;s have become somewhat of a pain during development and usage of Codio. A project must first have at least one app before it can have a file or directory, and then those files and directories must only be contained within an app.&lt;/p&gt;

&lt;p&gt;This is confusing to you, and as Codio has evolved over the last few months, it&amp;#39;s also become unnecessary, and has actually caused us more problems that it solves.&lt;/p&gt;

&lt;p&gt;So we will very shortly be removing the concept of app&amp;#39;s within a project, applying the following changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Any existing project that has &lt;strong&gt;only one app&lt;/strong&gt;, will have that app removed, and all it&amp;#39;s files and directories moved into the root of the project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Any existing project with &lt;strong&gt;more than one app&lt;/strong&gt; will have those app&amp;#39;s changed to plain old directories.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;New projects will no longer be created with an app, and instead all files and directories will be located at the project root.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We feel that this change will make things much more flexible for you, and will allow you to structure your projects in any way you please. It will also make things much simpler for all.&lt;/p&gt;

&lt;p&gt;If all goes well, this change will take place later this week. &lt;a href="https://twitter.com/codiohq"&gt;Follow us on Twitter&lt;/a&gt; for updates as they happen.&lt;/p&gt;

&lt;p&gt;If you have any questions or queries, please &lt;a href="mailto:help@codio.com"&gt;get in touch&lt;/a&gt;, or leave a comment below.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Support added for CoffeeScript, Sass, SCSS etc.</title>
    <link rel="alternate" href="https://codio.com/s/blog/2013/06/compiled-files/"/>
    <id>https://codio.com/s/blog/2013/06/compiled-files/</id>
    <published>2013-06-29T00:00:00Z</published>
    <updated>2013-06-29T00:00:00Z</updated>
    <author>
      <name>Freddy May</name>
    </author>
    <summary type="html">&lt;p&gt;We're pretty pleased with the latest addition to the Codio IDE. This time, we've added support for the following compiled language types (or whatever the correct collective description is)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CoffeeScript&lt;/li&gt;
&lt;li&gt;Sass&lt;/li&gt;
&lt;li&gt;SCSS&lt;/li&gt;
&lt;li&gt;Less&lt;/li&gt;
&lt;li&gt;Markdown&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We're also ready to add...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;We&amp;#39;re pretty pleased with the latest addition to the Codio IDE. This time, we&amp;#39;ve added support for the following compiled language types (or whatever the correct collective description is)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CoffeeScript&lt;/li&gt;
&lt;li&gt;Sass&lt;/li&gt;
&lt;li&gt;SCSS&lt;/li&gt;
&lt;li&gt;Less&lt;/li&gt;
&lt;li&gt;Markdown&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We&amp;#39;re also ready to add more file types, so tweet &lt;a href="http://twitter.com/CodioHQ"&gt;@codioHQ&lt;/a&gt; if you think we should add something.&lt;/p&gt;

&lt;h2 id="toc_0"&gt;Take a look&lt;/h2&gt;

&lt;p&gt;What you see below is a real IDE, so play with it to see how we support compiled file types. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Press the Preview menu option to run it and see how things are compiled on the fly&lt;/li&gt;
&lt;li&gt;Open up the example files (Less and CoffeeScript represented here)&lt;/li&gt;
&lt;li&gt;If you want it full size, &lt;a href="https://codio.com/codio/CompilingExample/tree/app/example.coffee" target="_blank"&gt;click here&lt;/a&gt; to see it in its own browser tab.&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width="950" height="600" src="https://codio.com/codio/CompilingExample/tree/app/example.coffee" style="margin:20px 0;"&gt;&lt;/iframe&gt;

&lt;h2 id="toc_1"&gt;How it works&lt;/h2&gt;

&lt;p&gt;Its jolly simple! No build tasks, no separate processes to think about. Just code and run.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You write your code in CoffeeScript, Less or whatever&lt;/li&gt;
&lt;li&gt;You reference anything that results in javascript by appending &lt;code&gt;.js&lt;/code&gt; like this &lt;code&gt;&amp;lt;script src=&amp;quot;example.coffee.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You reference anything that results in CSS by appending &lt;code&gt;.css&lt;/code&gt;like this &lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;style.less.css&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Codio then compiles the files automatically on demand.&lt;/p&gt;

&lt;p&gt;It really is jolly simple. Take a quick look at &lt;a href="/s/docs/compiling/one-file/"&gt;User Guide&lt;/a&gt;, too.&lt;/p&gt;

&lt;h2 id="toc_2"&gt;What about production deployment?&lt;/h2&gt;

&lt;p&gt;Currently, all this only works in development mode. However, in a few weeks we&amp;#39;ll have baked Grunt into Codio, so you will be able to configure build tasks really easily.&lt;/p&gt;

&lt;h2 id="toc_3"&gt;Seeing compiled output&lt;/h2&gt;

&lt;p&gt;Its also really easy to see compiled JS or CSS output for one of your files. The &lt;a href="/s/docs/compiling/one-file/"&gt;User Guide&lt;/a&gt; is the best place to get an explanation.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Bug reported, fixed and deployed in 50 minutes</title>
    <link rel="alternate" href="https://codio.com/s/blog/2013/06/bug-fixed-in-50-minutes/"/>
    <id>https://codio.com/s/blog/2013/06/bug-fixed-in-50-minutes/</id>
    <published>2013-06-13T00:00:00Z</published>
    <updated>2013-06-13T00:00:00Z</updated>
    <author>
      <name>Joel Moss</name>
    </author>
    <summary type="html">&lt;p&gt;I love how we develop and build software here at Codio. I want to explain quickly just one of the reasons why I love it so much, which also happens to have an immediate effect on you, our users.&lt;/p&gt;

&lt;p&gt;On tuesday morning, our awesome QA team reported a bug...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;I love how we develop and build software here at Codio. I want to explain quickly just one of the reasons why I love it so much, which also happens to have an immediate effect on you, our users.&lt;/p&gt;

&lt;p&gt;On tuesday morning, our awesome QA team reported a bug related to forking projects. This bug was reported at 9:41am.&lt;/p&gt;

&lt;p&gt;At 9:52am, one of our equally awesome engineers picked up the bug and began work on it.&lt;/p&gt;

&lt;p&gt;At 10:10am is was fixed.&lt;/p&gt;

&lt;p&gt;At 10:26am it was deployed and shipped to the world!&lt;/p&gt;

&lt;p&gt;From the time it was known and reported, to the time it was deployed to production was only 50 minutes! That is only possible due to the continuous development and deployment processes that we have in place.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll try and talk about these processes in a future post. &lt;a href="https://twitter.com/codiohq"&gt;Follow us&lt;/a&gt; to find out what else we&amp;#39;re up to.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Colour Preview and Picker</title>
    <link rel="alternate" href="https://codio.com/s/blog/2013/06/colour-preview-and-picker/"/>
    <id>https://codio.com/s/blog/2013/06/colour-preview-and-picker/</id>
    <published>2013-06-12T00:00:00Z</published>
    <updated>2013-06-12T00:00:00Z</updated>
    <author>
      <name>Joel Moss</name>
    </author>
    <summary type="html">&lt;p&gt;We pushed even more new features this week. Two of the highlights of these are a colour preview and colour picker, accessible from right within the code editor.&lt;/p&gt;

&lt;p&gt;Open any CSS file, hover your mouse over a colour value to see a preview of that colour...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;We pushed even more new features this week. Two of the highlights of these are a colour preview and colour picker, accessible from right within the code editor.&lt;/p&gt;

&lt;p&gt;Open any CSS file, hover your mouse over a colour value to see a preview of that colour. Then click the preview popup to show the colour picker. Then find your perfect colour!&lt;/p&gt;

&lt;p&gt;It even works with SCSS, SASS and Less files.&lt;/p&gt;

&lt;p&gt;&lt;img src="/s/img/blog/colorpicker-2b225ee2.gif" /&gt;&lt;/p&gt;

&lt;p&gt;Easy peasy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>More thoughts on teaching kids to code</title>
    <link rel="alternate" href="https://codio.com/s/blog/2013/06/coding-kids/"/>
    <id>https://codio.com/s/blog/2013/06/coding-kids/</id>
    <published>2013-06-11T00:00:00Z</published>
    <updated>2013-06-11T00:00:00Z</updated>
    <author>
      <name>Freddy May</name>
    </author>
    <summary type="html">&lt;p&gt;While we're very busy fashioning lovely new features into the Codio IDE, we are also trying to make some progress with our parallel project of getting kids (around 14 and over) to code.&lt;/p&gt;

&lt;h2 id="toc_0"&gt;Start with a laugh&lt;/h2&gt;

&lt;p&gt;In case you want to see how the youth of...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;While we&amp;#39;re very busy fashioning lovely new features into the Codio IDE, we are also trying to make some progress with our parallel project of getting kids (around 14 and over) to code.&lt;/p&gt;

&lt;h2 id="toc_0"&gt;Start with a laugh&lt;/h2&gt;

&lt;p&gt;In case you want to see how the youth of today interact with technology, take a quick look at the 15 second video below.&lt;br&gt;
  &lt;a href="http://www.youtube.com/v/OyGa9SC-MXQ?autoplay=1" class="fancybox fancybox.iframe" id="video"&gt;&lt;br&gt;
    &lt;img src="//i3.ytimg.com/vi/OyGa9SC-MXQ/mqdefault.jpg"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This was taken from this &lt;a href="http://www.youtube.com/v/ng7sf2_peFg?autoplay=1"&gt;TedX video&lt;/a&gt; Clare Sutcliffe of &lt;a href="http://codeclub.org.uk/"&gt;CodeClub&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="toc_1"&gt;But seriously&lt;/h2&gt;

&lt;p&gt;This video shows just how natural it is for kids to interact with technology. Apparently the modern term for a kid growing up with today&amp;#39;s tech is a &amp;#39;Digital Native&amp;#39;.&lt;/p&gt;

&lt;p&gt;The fact is, if we do not teach our kids to code, we are missing a major trick and  disadvantaging ourselves and our economies. Teaching them to code should be thought of as a great life skill and one that can reinforce a lot of other school subjects as discussed in this &lt;a href="/s/blog/2013/04/coding-art-math/"&gt;previous post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To the naysayers, yes, some kids will be better than others, but that applies to driving a car or learning mathematics. The fact is, technology is a life skill and coding plays a central part in every application we use on our computers, tablets and phones.&lt;/p&gt;

&lt;h2 id="toc_2"&gt;Progress&lt;/h2&gt;

&lt;p&gt;We have made a lot of progress in providing a web based platform that is really great for kids above 13 or 14 all the way up to professional developers. By August, it will be ready and free for education, open source and public projects.&lt;/p&gt;

&lt;p&gt;What we are trying to do in parallel is devise a way of spreading the word. We are very open to collaborate with anyone, so feel free to email fmay at codio dot com if you have any bright ideas.&lt;/p&gt;

&lt;p&gt;More posts on this subject coming.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>The Journey from Mercurial to Git</title>
    <link rel="alternate" href="https://codio.com/s/blog/2013/06/journey/"/>
    <id>https://codio.com/s/blog/2013/06/journey/</id>
    <published>2013-06-10T00:00:00Z</published>
    <updated>2013-06-10T00:00:00Z</updated>
    <author>
      <name>Friedel Ziegelmayer</name>
    </author>
    <summary type="html">&lt;h2 id="toc_0"&gt;The Problem&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;In which we see all the issues that come with great version control.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As &lt;a href="/s/blog/2013/06/moving-from-mercurial-to-git/"&gt;already mentioned in the last post&lt;/a&gt; we are using Mercurial right now but want to switch to Git. So the question in the room was how to convert a large Mercurial repository...&lt;/p&gt;</summary>
    <content type="html">&lt;h2 id="toc_0"&gt;The Problem&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;In which we see all the issues that come with great version control.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As &lt;a href="/s/blog/2013/06/moving-from-mercurial-to-git/"&gt;already mentioned in the last post&lt;/a&gt; we are using Mercurial right now but want to switch to Git. So the question in the room was how to convert a large Mercurial repository to Git, without losing any history and converting the named Mercurial branches to Git branches.&lt;/p&gt;

&lt;p&gt;There were a few tools that I tried, mainly &lt;a href="https://github.com/frej/fast-export"&gt;fast-export&lt;/a&gt; and &lt;a href="http://www.fogcreek.com/kiln/"&gt;Kiln&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The first one was fast-export and the main problem was that after I got it installed it always crashed with some cryptic errors. Some of them could be resolved as explained in this &lt;a href="http://www.mehdi-khalili.com/migrating-from-mercurial-to-git"&gt;post&lt;/a&gt;. But even then after fixing these there were more errors, so I eventually gave up.&lt;/p&gt;

&lt;p&gt;The next one was &lt;a href="http://www.fogcreek.com/kiln/"&gt;Kiln&lt;/a&gt;, a service that claims to allow you to work on a single repository using Git &lt;em&gt;and&lt;/em&gt; Mercurial. After setting up an account and waiting forty minutes to push from the command line, I was excited to see what happened, but was pretty bummed to see that the repo was completely empty in the web interface. After the command line, I tried their importer, which took about the same amount of time again only to give me just a partial history in the web interface. After this I was quite fed up with Kiln and moved on.&lt;/p&gt;

&lt;h2 id="toc_1"&gt;The Meeting&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;In which we meet a creature much more powerful than we had ever imagined.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I was about to give up my search when I found &lt;a href="https://github.com/buchuki/gitifyhg"&gt;Gitifyhg&lt;/a&gt;. &lt;a href="https://github.com/buchuki/gitifyhg"&gt;Gitifyhg&lt;/a&gt; is not intended as a way of converting Mercurial repositories to Git, but rather to give people who have to work on those, an easy way&lt;br&gt;
to interact with them using Git.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This git remote allows you to do local development in a git repository and push changes to an upstream mercurial repository. It does this seamlessly and allows pushing and pulling to named branches in the upstream repository.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But because it needs to be able to do much more, e.g. converting back and forth from Mercurial to Git, it is able to do exactly what we need: convert a complete Mercurial repository into a Git repository without losing any history or a single branch.&lt;/p&gt;

&lt;h2 id="toc_2"&gt;The Great Conversion&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;In which Mercurial branches become Git branches.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id="toc_3"&gt;The Installation&lt;/h3&gt;

&lt;p&gt;As we&amp;#39;re already using Mercurial, Python is set up and hopefully &lt;code&gt;pip&lt;/code&gt; or &lt;code&gt;easy_install&lt;/code&gt;. If this is the case then installation is as simple as typing:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pip install gitifyhg
# or
$ easy_install gitifyhg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For more information on installation procedures check out the &lt;a href="https://github.com/buchuki/gitifyhg#install"&gt;readme&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="toc_4"&gt;The Ceremony&lt;/h3&gt;

&lt;p&gt;Now that gitifyhg is installed we can harness its powers by simply cloning a Mercurial repository with this command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone gitifyhg::&amp;lt;mercurial repository&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One thing to note here, is that the easiest way - for conversion at least - is to clone a local repository instead of one that is on a server. The main issue here is that I couldn&amp;#39;t figure out how to sign in to &lt;a href="https://bitbucket.org/"&gt;Bitbucket&lt;/a&gt; using this approach.&lt;/p&gt;

&lt;p&gt;When this command has finished running the conversion is finished. What we now need to do is set up remote tracking branches for all our git branches so we can check them out. This is easy enough for a single branch by doing:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git --track &amp;lt;name of the remote branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But if you have many branches and want to add them all at once we can use the power of the shell to do it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ for remote in `git branch -r `; do git branch --track $remote; done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can now take a look at all our Mercurial branches in Git:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git branch -r
  origin/HEAD -&amp;gt; origin/master
  origin/branches/#7345_tabs_reopening
  origin/branches/#7528_context-no-longer-needed
  origin/branches/#7610_md5_cache
  origin/branches/#7633_file_tree_icons
  origin/branches/#7663_deployment_UI
  origin/branches/#7777_sharejs
  origin/branches/#7797_first_app_selection
  origin/branches/#7800_ace_themes
  origin/branches/#7897_annotations_menuitem_visibility
  origin/branches/#7973_preview_hotkeys
  origin/branches/#7981_tour_closing
  origin/branches/#8011_inline_preview
  origin/branches/#8013_shortcuts
  origin/branches/#8062_error_on_init_during_close
  origin/branches/#8128_css_color_preview
  origin/branches/#8130_emmet_hotkeys
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="toc_5"&gt;The Cleaning&lt;/h3&gt;

&lt;p&gt;Gitifyhg uses the convention &lt;code&gt;master = default&lt;/code&gt; for the main branch and &lt;code&gt;&amp;lt;git branch name&amp;gt; = branches/&amp;lt;mercurial branch name&amp;gt;&lt;/code&gt; for all other branches. We don&amp;#39;t want this. Instead we want to rename our local branches so that the prefix &lt;code&gt;branches/&lt;/code&gt; is removed. This is easily done by doing:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git branch -m &amp;lt;old name&amp;gt; &amp;lt;new name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So we can rename those branches that we want to keep around and remove those that are not needed anymore by calling:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git branch -D &amp;lt;branch name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="toc_6"&gt;The Epilogue&lt;/h2&gt;

&lt;p&gt;Now that we&amp;#39;ve converted the repository itself, the real work begins. We need to change our development cycle around version control and educate everyone about how to use Git in a safe and productive way. Even if these two are similar there is still a lot to learn and the raw power of Git can sometimes be a little bit scary, but personally I much prefer having all the power rather than jumping through hoops all the time.&lt;/p&gt;
</content>
  </entry>
</feed>
